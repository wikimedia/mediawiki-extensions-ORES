{
  "comments": [
    {
      "key": {
        "uuid": "ceb9bbfa_147677d5",
        "filename": "modules/ext.ores.highlighter.js",
        "patchSetId": 18
      },
      "lineNbr": 12,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-11-22T17:01:01Z",
      "side": 1,
      "message": "You are using $( this ) multiple times in this code. This is typical jQuery code, but there is a way to make this code much easier to read:\n\n$( \u0027li.damaging\u0027 ).each( function ( index, item ) {\n    $item \u003d $( item );\n\nAnd then use $item instead of $( this ).",
      "range": {
        "startLine": 12,
        "startChar": 12,
        "endLine": 12,
        "endChar": 21
      },
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_d4e11899",
        "filename": "modules/ext.ores.highlighter.js",
        "patchSetId": 18
      },
      "lineNbr": 12,
      "author": {
        "id": 920
      },
      "writtenOn": "2016-11-23T09:59:31Z",
      "side": 1,
      "message": "It\u0027s used only twice. Are you sure?",
      "parentUuid": "ceb9bbfa_147677d5",
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_f70c1e3f",
        "filename": "modules/ext.ores.highlighter.js",
        "patchSetId": 18
      },
      "lineNbr": 12,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-11-23T10:34:49Z",
      "side": 1,
      "message": "I\u0027m sure this is more readable. Whenever I see \"$( this )\" I\u0027m scared that the \"this\" refers to something unwanted. This is a typical place where people always make mistakes, no matter how experienced they are.\n\nThis was meant as a suggestion. It\u0027s not a performance issue.",
      "parentUuid": "ceb9bbfa_d4e11899",
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_144d579b",
        "filename": "modules/ext.ores.highlighter.js",
        "patchSetId": 18
      },
      "lineNbr": 25,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-11-22T17:01:01Z",
      "side": 1,
      "message": "Not sure about using attr() for this.\n\nhttp://stackoverflow.com/questions/5874652/prop-vs-attr",
      "range": {
        "startLine": 25,
        "startChar": 14,
        "endLine": 25,
        "endChar": 18
      },
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_74b81375",
        "filename": "modules/ext.ores.highlighter.js",
        "patchSetId": 18
      },
      "lineNbr": 25,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-11-22T17:01:01Z",
      "side": 1,
      "message": "I believe it\u0027s better and more compatible to make this an actual data attribute, by naming it \"data-ores-damaging\" or something like that.",
      "range": {
        "startLine": 25,
        "startChar": 21,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_b4dea4dc",
        "filename": "modules/ext.ores.highlighter.js",
        "patchSetId": 18
      },
      "lineNbr": 25,
      "author": {
        "id": 920
      },
      "writtenOn": "2016-11-23T09:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ceb9bbfa_74b81375",
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_b48fcbd0",
        "filename": "modules/ext.ores.styles.css",
        "patchSetId": 18
      },
      "lineNbr": 20,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-11-22T17:01:01Z",
      "side": 1,
      "message": "\"!important\" should really be avoided whenever possible. Why is it needed here? Usually the selector is not specific enough. This is better solved by adding (for example) \"li\" or \"a\" to the selector.",
      "range": {
        "startLine": 20,
        "startChar": 24,
        "endLine": 20,
        "endChar": 34
      },
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_a7479f4f",
        "filename": "modules/ext.ores.styles.css",
        "patchSetId": 18
      },
      "lineNbr": 20,
      "author": {
        "id": 2604
      },
      "writtenOn": "2016-11-22T17:20:58Z",
      "side": 1,
      "message": "Thanks for this comment. I was actually unclear myself about the need of `!important` here. An attribute selector precedes over a simple class selector. I would add that we should also avoid putting an element selector for specificity. That\u0027s a bad practice too, which is all over in MediaWiki for historic reasons of bad CSS architecture.",
      "parentUuid": "ceb9bbfa_b48fcbd0",
      "range": {
        "startLine": 20,
        "startChar": 24,
        "endLine": 20,
        "endChar": 34
      },
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_1459d090",
        "filename": "modules/ext.ores.styles.css",
        "patchSetId": 18
      },
      "lineNbr": 20,
      "author": {
        "id": 920
      },
      "writtenOn": "2016-11-23T09:50:59Z",
      "side": 1,
      "message": "I should explain this. I agree we should not use !important often but I think this case is needed. Because the extension (in php part) adds \"damaging\" class to all rows and this css adds a simple background (see line 14) but then the javascript adds ores-damaing\u003dsoft|hard|softest attribute and needs to overwrite that. I want to keep the above css because people might disable javascript and they should still be able to have some functionality.",
      "parentUuid": "ceb9bbfa_a7479f4f",
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9bbfa_77000e05",
        "filename": "modules/ext.ores.styles.css",
        "patchSetId": 18
      },
      "lineNbr": 20,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-11-23T10:34:49Z",
      "side": 1,
      "message": "As I said, you have a problem with selectors that are not specific enough. This is solved by either making selectors less specific (e.g. replace \"li.damaging, tr.damaging\" with \".damaging\"), or by making the other more specific (e.g. replace \"[ores-damaging\u003d\"softest\"]\" with \"li.damaging[ores-damaging\u003d\"softest\"], tr.damaging[ores-damaging\u003d\"softest\"]\"), or a combination of both.\n\nMy suggestion would be:\n\n.damaging {\n    /* default background color */\n}\n.damaging[data-damaging\u003d\"softest\"] {\n    /* more specific background color */\n}",
      "parentUuid": "ceb9bbfa_1459d090",
      "revId": "bb4c61152a69f49db1187ef300f16297d056d241",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}