{
  "comments": [
    {
      "key": {
        "uuid": "277a3864_962a5acd",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 920
      },
      "writtenOn": "2018-06-01T13:37:23Z",
      "side": 1,
      "message": "This is a very large method. Can this been broken down to smaller ones?",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 43
      },
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1503542_e8070e51",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-31T03:05:04Z",
      "side": 1,
      "message": "I made it a little bit smaller by converting the HTML building to a template, and now all it does is build the parameters for the template and invoke the template. If you have suggestions for splitting it up further, let me know.",
      "parentUuid": "277a3864_962a5acd",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 43
      },
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3951474d_071a0b85",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 143
      },
      "writtenOn": "2018-05-19T17:14:25Z",
      "side": 1,
      "message": "$this-\u003egetConfig ?",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44ce97c9_ce376bc7",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 366
      },
      "writtenOn": "2018-05-19T17:16:10Z",
      "side": 1,
      "message": "Indeed. No new global calls, tsk.",
      "parentUuid": "3951474d_071a0b85",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47c250e2_641dfdcc",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-31T01:01:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44ce97c9_ce376bc7",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae92a14a_d4b4f48b",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 143
      },
      "writtenOn": "2018-05-19T17:14:25Z",
      "side": 1,
      "message": "You know better than I, but it looks like a parent::execute call would take care of this preamble.",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdb95246_a309ca5a",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-31T01:01:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae92a14a_d4b4f48b",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82d65d2b_0db20ed6",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 920
      },
      "writtenOn": "2018-06-01T13:37:23Z",
      "side": 1,
      "message": "Dependency Injection for better testing would be fantastic. For example see https://github.com/wikimedia/mediawiki-extensions-Wikibase/blob/master/repo/includes/Specials/SpecialAvailableBadges.php\nI\u0027m not sure how doable it is in this case.",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 9
      },
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3f358a7_0a7ec023",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-31T01:01:02Z",
      "side": 1,
      "message": "Done; the only annoying this is that I had to use a custom registration hook to be able to set $wgSpecialPages[\u0027ORESModels\u0027] to a callback, as opposed to just put a string in extension.json.",
      "parentUuid": "82d65d2b_0db20ed6",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 19,
        "endChar": 9
      },
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6da9d51_7f0ccaa3",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 143
      },
      "writtenOn": "2018-05-19T17:14:25Z",
      "side": 1,
      "message": "We could use Mustache instead...",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4764b8b6_e09fd5ce",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 366
      },
      "writtenOn": "2018-05-19T17:16:10Z",
      "side": 1,
      "message": "Please please please do not.",
      "parentUuid": "f6da9d51_7f0ccaa3",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a5d0874_f828158c",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 143
      },
      "writtenOn": "2018-05-19T17:21:44Z",
      "side": 1,
      "message": "Happy to defer here, but I\u0027m wondering why not?  It would let us render something better than a table, optimize for mobile and so on...",
      "parentUuid": "4764b8b6_e09fd5ce",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27d87c01_2297fc8f",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-31T03:05:04Z",
      "side": 1,
      "message": "I converted this code to use a template and it became a lot cleaner",
      "parentUuid": "2a5d0874_f828158c",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c7e4a4d_7d360cb8",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 143
      },
      "writtenOn": "2018-05-19T17:14:25Z",
      "side": 1,
      "message": "Should we be surfacing whether these are positives or negatives?  For example, the default damaging#likelygood threshold is a \"max\", so 99.5% precision means that we are only including 0.5% false positives, i.e. damaging edits.  For the default damaging#verylikelybad threshold of 90% precision, we\u0027re including 10% false positives, in this case non-damaging edits.\n\nIt\u0027s interesting that the filter labels already make an assumption about outcome polarity, which is a larger problem, not the fault of this patch.",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0526af11_96704e94",
        "filename": "includes/SpecialORESModels.php",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 5
      },
      "writtenOn": "2018-08-31T03:05:04Z",
      "side": 1,
      "message": "Right now that\u0027s done through the names of the filters, and the color-coding (the positive filters are green, the negative ones are yellow/orange/red). If you have further ideas for how to express this, you could easily add them now that this has been converted to a template (by injecting $outcome as a parameter and putting conditional stuff in the template).",
      "parentUuid": "9c7e4a4d_7d360cb8",
      "revId": "8ed0cbf001e5a52b5cf8dd43b69acc7b7ce2688d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}