{
  "comments": [
    {
      "key": {
        "uuid": "0e82f318_9a3d67bb",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 140,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-26T19:55:41Z",
      "side": 0,
      "message": "I moved this condition into the join conditions for ores_model",
      "range": {
        "startLine": 140,
        "startChar": 15,
        "endLine": 140,
        "endChar": 61
      },
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_07aafb6c",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 140,
      "author": {
        "id": 920
      },
      "writtenOn": "2016-09-27T01:52:43Z",
      "side": 0,
      "message": "These conds weren\u0027t there at first time but here\u0027s the problem and that\u0027s why we added these conds:\nWe are left joining revision with ores_classification, sometimes the score is not stored but we need to show such revisions, but these revisions leave oresc_model \u003d NULL with them.\nWe are left joining again with ores_model, it\u0027s quite possible that oresc_model row doesn\u0027t exist in ores_model and also remember we might have several types of scores stored in ores_classification table. \n\nTLDR: ores_classification is a messy table. Without double check I\u0027m super skeptical of removing these conditions that were added because of UBN! tasks such as https://phabricator.wikimedia.org/T144233\nhttps://phabricator.wikimedia.org/T144999\n\nFirst joining with ores_model and then joining ores_classification sounds like a good solution but I don\u0027t get on what we are joining, there is no common column between these two (unless we select the ores model id and then directly join revision/recentchanges with ores_classification)",
      "parentUuid": "0e82f318_9a3d67bb",
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_2ca6febe",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 140,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-28T01:36:57Z",
      "side": 0,
      "message": "I tested both of these bugs and they don\u0027t happen for me locally. Unscored revisions still appear, and revisions with scores from non-current models don\u0027t appear twice.\n\nI agree that oresc_classification is messy, it could probably be a lot simpler. I\u0027m not convinced that we need model versioning for example, or that the way it\u0027s currently implemented will work well. We may also have to look at ways to denormalize the tables to make filtering queries in RC and contribs work better, especially for filters that return few/sparse results (e.g. finding damaging edits in the contribs view for an experienced user).\n\nRe the join: yeah, it doesn\u0027t make too much sense at first glance, but the join conds identify one row (the current model for damaging), so that one row just gets added to every row from the previous table. It looks a bit weird but it works :)",
      "parentUuid": "0e82f318_07aafb6c",
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_fa42e33d",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-26T19:55:41Z",
      "side": 0,
      "message": "...which means this condition isn\u0027t needed any more, because LEFT JOIN allows NULLs.",
      "range": {
        "startLine": 141,
        "startChar": 8,
        "endLine": 141,
        "endChar": 26
      },
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_7aad13e7",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 143,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-26T19:55:41Z",
      "side": 0,
      "message": "This was unnecessary because the join conds for ores_model already have oresm_is_current\u003d1",
      "range": {
        "startLine": 143,
        "startChar": 15,
        "endLine": 143,
        "endChar": 36
      },
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_9ab3a74b",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 143,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-26T19:55:41Z",
      "side": 0,
      "message": "and because that join is a LEFT JOIN which allows NULLs, we don\u0027t need this either.",
      "range": {
        "startLine": 143,
        "startChar": 39,
        "endLine": 143,
        "endChar": 64
      },
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_9a6487e3",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-26T19:55:41Z",
      "side": 0,
      "message": "I didn\u0027t change these conditions, other than changing how they\u0027re formatted.\n\nCome to think of it, we probably shouldn\u0027t hardcode 1 here but use $wgOresModels[\u0027damaging\u0027][\u0027true\u0027] or whatever it is. But that\u0027s for later.",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 147,
        "endChar": 25
      },
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_fa59032e",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-26T19:55:41Z",
      "side": 0,
      "message": "I moved this condition to the join conds for ores_classification, because I switched the order of the tables (it conceptually makes more sense to first find the model, then the classifications for that model).",
      "range": {
        "startLine": 150,
        "startChar": 4,
        "endLine": 150,
        "endChar": 26
      },
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_dabd1f18",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-26T19:55:41Z",
      "side": 0,
      "message": "Changing LEFT JOIN to INNER JOIN here wasn\u0027t necessary, because there\u0027s already a non-null condition on oresc_probability. It may be that it was needed before I switched the order, but it isn\u0027t now.",
      "range": {
        "startLine": 156,
        "startChar": 43,
        "endLine": 156,
        "endChar": 53
      },
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_8796eb40",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 920
      },
      "writtenOn": "2016-09-27T01:52:43Z",
      "side": 0,
      "message": "It\u0027s for performance, https://phabricator.wikimedia.org/T137895",
      "parentUuid": "0e82f318_dabd1f18",
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_2cbfdece",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-28T01:36:57Z",
      "side": 0,
      "message": "Hmm, interesting. I\u0027ll have to see if my rewritten query has the same problem.",
      "parentUuid": "0e82f318_8796eb40",
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e82f318_8c8a8a1a",
        "filename": "includes/Hooks.php",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 5
      },
      "writtenOn": "2016-09-28T01:49:11Z",
      "side": 0,
      "message": "Looks like it doesn\u0027t. With LIMIT 500 it is kind of slow, but only about 5 seconds, nothing like T137895. I also didn\u0027t see a difference between LEFT JOIN and INNER JOIN. That said, I\u0027ll put it back in for paranoia.",
      "parentUuid": "0e82f318_2cbfdece",
      "revId": "6105b59f2f97ec06548e41dd78993bb7fa0e6f0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}